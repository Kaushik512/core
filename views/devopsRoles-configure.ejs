<%if(cookbooks){%>
<style type="text/css">
        .recipies {
            text-align: center;
            margin-top: 30px;
              height: 200px;

        }
        .recipies-list-container {
            padding-left: 20px;
       padding-top: 20px;
       text-align: left;
     
        }

        .sel-roles-container {
    height: 42%;
    text-align: center; 
           
        }
   .sel-roles-container ul{
     overflow-y: auto;
     height: 100%;
    padding-top: 8px;
   }
   .field-heading {
    border-bottom: 1px solid;
    font-size: 18px;

   }

        .sel-roles {
            background-image: linear-gradient(to bottom, #F9F9F9 0%, #EDEBF4 100%);
    border: 1px solid #DDDDDD;
    border-radius: 4px 4px 4px 4px;
    display: block;
    line-height: 1.42857;
    margin-bottom: 4px;
     margin-left: 4px;
    margin-top: 3px;
    max-width: 100px;
    min-height: 110px;
    padding-bottom: 4px;
    padding-left: 4px;
    padding-right: 4px;
    text-align: center;
    transition: all 0.2s ease-in-out 0s;
    cursor: pointer;

        }

        .sel-roles-caption {
            text-align: center;
        }
        .sel-role-thumbnail {
    float: left;
    margin-bottom: 5px;
    margin-right: 5px;
    max-height: 145px;
    max-width: 109px;
    width: 41%;
    margin-left: 2%;
    border-radius: 5px 5px 5px 5px;
        }

        .sel-active {
            background-color: green;
        }

        .sel-role-runlist {
          border-top: 1px solid;
          text-align: center;
          font-size: 10px; 
          padding-top: 10px; 
        } 
        .sel-role-runlist {

        }
        .sel-role-heading {
           font-size: 12px;
    overflow: hidden;
    padding-bottom: 2px;
    padding-top: 2px;
    text-overflow: ellipsis;
    white-space: nowrap;
            }

            .recipes-list {
              height:160px !important;
              width:90%;
              margin-bottom:10px;
              display: none;  
            }
            .runlist-item  {
              margin-bottom: 3px !important;
            }
.ul-roles-container {
     
}
.instance-options-container {
  text-align: left;
}
.instance-configuration-container {
  display: none;
}
.glowBox  {
  background: none repeat scroll 0 0 #FFFFFF;
     box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.4);
     border-radius: 4px;
}
.securityGroupMenuContainer {
display: none;
}
.securityGroupMenu {
  display: none;
}
.staticConfigContainer {
  display: none;
}
</style>
<link type="text/css" href="css/ui.multiselect.css" rel="stylesheet" />
<div class="configureRolesContainer">
<div class="">
    <div class="sel-roles-container col-md-12 glowBox">
       <!-- <span class="field-heading"> Roles </span>-->

  <ul class="thumbnails list-unstyled ul-roles-container">
  <%
  var rolesSelected = prodSelected.selectedInstances;
  var keys = Object.keys(rolesSelected);
  for(var i=0;i<keys.length;i++){ %>
  <li class="sel-role-thumbnail">
   <div class="sel-roles" data-recipe-list-id = "<%=rolesSelected[keys[i]].cid%>">
   <div class="sel-roles-caption"> 
   <div class="sel-role-heading" title="<%= rolesSelected[keys[i]].title%>"><%= rolesSelected[keys[i]].title%></div>
   <div class="sel-role-runlist">
   <% var runlistArr = rolesSelected[keys[i]].runlist.split(',');
      for(var j=0;j<runlistArr.length;j++) {    
   %>
   <p class="runlist-item"><%=runlistArr[j]%></p>  
   <% } %>
</div>
   </div>
  
  </li> 
 <%}%>
</ul>

</div>

<div class="recipies col-md-12 glowBox">
    <!--<span class="field-heading"> Add Chef Cookbooks </span>-->
<%
    for(var j =0; j< keys.length; j++){%>
    <div class="instance-configuration-container" id="configContainer<%=rolesSelected[keys[j]].cid%>">
    <div class="instance-options-container col-md-6">

      <form class="appConfig" role="form" style="display: block;">

        <div class="form-group">
    <label for="devopsRoleRegionMenu">
      AWS Region
    </label>
    <select class="devopsRoleRegionMenu">
      <option selected="" value="Choose">
        Choose
      </option>
      <option value="us-east-1">
        us-east-1
      </option>
      <option value="us-west-2">
       us-west-2
      </option>
      <option value="us-west-1">
        us-west-1
      </option>
      <option value="eu-west-1">
        eu-west-1
      </option>
      <option value="ap-southeast-1">
        ap-southeast-1
      </option>
      <option value="ap-southeast-2">
        ap-southeast-2
      </option>
      <option value="ap-northeast-1">
        ap-northeast-1
      </option>
      <option value="sa-east-1">
        sa-east-1
      </option>
    </select>
  </div>
  

  <div class="form-group securityGroupMenuContainer">
    <label for="">
      Security Group
    </label>
    <select class="securityGroupMenu">
      
    </select>
    <span class="loadingContainer"></span>
  </div>


  <div class="form-group staticConfigContainer">
    <label for="numberOfInstance">
      Choose number of Instances
    </label>
    <select class="numberOfInstance">
      <option selected="" value="1">
        1
      </option>
      <option value="2">
        2
      </option>
      <option value="3">
        3
      </option>
      <option value="4">
        4
      </option>
      <option value="5">
        5
      </option>
      <option value="6">
        6
      </option>
      <option value="7">
        7
      </option>
      <option value="8">
        8
      </option>
      <option value="9">
        9
      </option>
      <option value="10">
        10
      </option>
    </select>
  </div>
  
  <div class="form-group staticConfigContainer">
    <label for="sizeData">
      Choose Instance Size
    </label>
    <select class="sizeData">
      <option selected="" value="micro">
        t1.micro
      </option>
      <option value="m1.small">
        m1.small
      </option>
      <option value="m1.medium">
        m1.medium
      </option>
      <option value="m1.large">
        m1.large
      </option>
      <option value="m1.xlarge">
        m1.xlarge
      </option>
    </select>
  </div>
</form>

    </div>
<div class="recipies-list-container col-md-6">

   <select id="<%=rolesSelected[keys[j]].cid%>" class="recipes-list" multiple="multiple"> 
 <%for(var i =0; i< cookbooks.length; i++){%>
    <option data-id="<%=i%>" value='<%=cookbooks[i]%>'><%=cookbooks[i]%></option>
<%}%>
  </select>

</div>
</div>
<%}%>
</div>
</div>

</div>
<input type="button" name="previous" class="previous action-button goto-gallery" value="Previous" />
<input type="button" name="next" class="next action-button goto-launchInstances" value="Next" />

<!-- DOMAIN name anchor-->
<a class="navbar-brand nav-settings domain-settings" style="" href="#domainModal" data-target="#domainModal" data-toggle="modal" role="button" title="Domain"></a>

    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript" src="js/jq-plugins/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="js/jq-plugins/ui.multiselect.js"></script>
    <script>
      //$(".multiselect").multiselect();
      (
      function(){
       
       DEVOPS.navigation.displayNavigationBtn();       
       

       $(".goto-launchInstances").click(function(){
  
       var current_fs = $(this).parent().parent();
       var next_fs = $(this).parent().parent().next();
  
  //activate next step on progressbar using the index of next_fs

       $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
  
        //show the next fieldset
       current_fs.hide();
       next_fs.show(); 
       
       var $launchingInstanceContainer = $('.launchingInstanceContainer').empty().append('<img class="center-block" style="height:50px;width:50px;margin-top: 10%;margin-bottom:10%" src="img/loading.gif" />');
         $('.goto-finish').hide();
         $('.goto-configureRoles').hide();   


       $('.domain-settings').trigger('click');
        $('.save-domain-btn').unbind("click").click(function(evt){
          console.log("save button clicked");
             finish(evt,$launchingInstanceContainer.get(0),$('#domainNameText').val()+'');
             /*$('.goto-finish').show();
             $('.previous').show();*/ 
         });
      });

       $(".goto-gallery").click(function(){

  
     var current_fs = $(this).parent().parent();
     var previous_fs = $(this).parent().parent().prev();
  
     //de-activate current step on progressbar
     $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");
  
  
     current_fs.hide();
     previous_fs.show(); 

   });

   $('.devopsRoleRegionMenu').change(function(){
      var $this = $(this);
      var value = $(this).val();
       var $form =  $this.parents('.appConfig');
      var $securityGroupMenuContainer = $form.find('.securityGroupMenuContainer');
      if(value === 'Choose') {
        $securityGroupMenuContainer.hide();
        return;
      }
      var $securityGroupMenu = $securityGroupMenuContainer.find('.securityGroupMenu');
      $securityGroupMenu.hide();
      $('.staticConfigContainer').hide();
     
      var $securityGroupMenuContainer = $securityGroupMenuContainer.show();
      var $loadingContainer = $securityGroupMenuContainer.find('.loadingContainer').empty().append('<img class="" style="width:20px;" src="img/loading.gif" />').show();
      $.post('/aws/ec2/securityGroups',{region:$(this).val()},function(data){
        $loadingContainer.hide();
        $securityGroupMenu.empty();    
        $securityGroupMenu.append('<option value="Choose">Choose</option>');
        for(var i=0;i<data.length;i++) {
           $securityGroupMenu.append('<option value="'+data[i].GroupId+'">'+data[i].GroupName+'</option>');
        }
         $securityGroupMenu.show();
      });
   });

   $('.securityGroupMenu').change(function(e){
     $this = $(this);
     if($this.val() === 'Choose') {
       $('.staticConfigContainer').hide();
       return;
     }
     $('.staticConfigContainer').show();
   });


       


       function finish(e,tabEl,domainName) {
         //alert('here');
           var $message = $('<div class="instance-result"><div class="alert alert-success fade in instanceSuccess" id="message" style="margin: 10px 25px;display: none"><strong>Congratulations!</strong>&nbsp;Instance Launched Successfully.</div></div>');
            DEVOPS.navigation.hideAllBtns(); 
           
            var selectedInstances = JSON.parse('<%-JSON.stringify(prodSelected.selectedInstances)%>');
            var pid = <%=prodSelected.pid%>
            var keys = Object.keys(selectedInstances);
            for(var i=0;i<keys.length;i++) {
               selectedInstances[keys[i]].runlistSelected = [];
               $('#'+keys[i]+' :selected').each(function(k, selected){ 
                selectedInstances[keys[i]].runlistSelected[k] = $(selected).val(); 
               });
            }            

            console.log(selectedInstances);


            $.post('/providers/'+pid+'/roles/launch',{domainName:domainName,selectedInstances:selectedInstances,pid:pid},function(data,success){
               
               console.log(data);
               if(data.error || data.launchedInstances.length === 0) {
                 var $errorMessage = $('<div class="instance-result"><div class="alert alert-danger fade in" id="message" style="margin: 10px 25px;"><strong>Error!</strong>&nbsp;Launching of instances failed.</div></div>');
                  $(tabEl).empty().append($errorMessage);
                  var $finishBtn= $('.goto-finish').show();
                  $('.goto-configureRoles').show();
                  //alert('error');
                 return;
               }

               var launchInstances = {};
               var numberOfInstances = data.launchedInstances.length;
               var numberOfInstancesBootstrapped = 0;

               for(var j=0;j<data.launchedInstances.length;j++){
                var $instanceData = $('<div class="alert alert-info fade in instanceSuccess" style="margin: 10px 25px;display: none;text-align:left"> Role :- '+data.launchedInstances[j].title+'<br/> Instance Id : '+data.launchedInstances[j].instanceId+' <div id="'+data.launchedInstances[j].instanceId+'" data-waitingTest="false" data-bootstrapText="false"></div></div>');
                $message.append($instanceData);
                launchInstances[data.launchedInstances[j].instanceId] ={};
                launchInstances[data.launchedInstances[j].instanceId].title = data.launchedInstances[j].title; 
               
               }
              $message.find('.instanceSuccess').show();
              $(tabEl).empty().append($message);
              
              //polling
              
              for(var j=0;j<data.launchedInstances.length;j++) {
                (function(instId){
                   var lastTime = 0;
                   var lastErrTime= null;
                    function pollInstanceStatus(instId){
                      var complete = false;
                     
                      $.get('/instanceStatus/'+instId,function(stateData) {
                       if(stateData.length) {
                        console.log(stateData);
                         var bootStrapLog =  stateData[0].bootStrapLog;
                         if(bootStrapLog.log == 'waiting') {
                               var $output = $('#'+instId);
                               if($output.attr('data-waitingTest')=='false') {
                                $output.append('<span>Waiting for instance...</span><img src="img/instance-waiting.gif"/>');
                                $output.attr('data-waitingTest',"true");
                              }
                            } else {
                               if(bootStrapLog.timestamp>lastTime) { 
                                 var $output = $('#'+instId);
                                 var $terminal = null;
                                if($output.attr('data-bootstrapText')=='false') {
                                  console.log('in if');
                                  $terminal = $('<div style="height:160px;width:auto;color:white;background-color:black;overflow:auto"></div>')
                                  $output.empty();
                                  $output.append('<span>Bootstrapping Instance...<img src="img/instance-waiting.gif"/><span><br/>');
                                  $output.append($terminal);
                                  $output.attr('data-bootstrapText',"true")
                                } else {
                                 $terminal = $output.find('div');
                                }
                                console.log($terminal.length);
                                if(!bootStrapLog.err) {
                                  $terminal.append('<span>'+bootStrapLog.log+'</span><br/>');
                                } else {
                                  $terminal.append('<span style="color:red">'+bootStrapLog.log+'</span><br/>');
                                } 
                                $terminal.scrollTop($terminal[0].scrollHeight);
                               lastTime = bootStrapLog.timestamp;
                            } else {
                              console.log('timestamp is bigger');
                            }
                          }
                          if(stateData[0].bootStrapStatus != 'waiting') {
                            var $output = $('#'+instId);
                            var $outputHeader =  $output.find('span:first');
                            if(stateData[0].bootStrapStatus === 'success') {
                                  launchInstances[instId].bootstrapSuccess = true;
                                  $outputHeader.empty().append('<span style="color:green">Instance Bootstrapped Successfully</span>')
                            } else {
                                 $outputHeader.empty().append('<span style="color:red">Instance Bootstrapping Failed</span>')
                                 launchInstances[instId].bootstrapSuccess = false;
                            }
                            numberOfInstancesBootstrapped++;
                                if(numberOfInstances === numberOfInstancesBootstrapped) {
                                  var $finishBtn= $('.goto-finish').show();
                                  $('.goto-configureRoles').show();
                                  $finishBtn.click(function(evt,tabEl){
                                    DEVOPS.navigation.hideAllBtns();
                                    DEVOPS.navigation.showFirstTab('');
                                    DEVOPS.navigation.showFirstTab('<img class="center-block" style="height:50px;width:50px;margin-top: 10%;" src="img/loading.gif" />');
           
                                    $.get("/domainDetails/"+pid,function(data){
                                      DEVOPS.navigation.showFirstTab(data);
                                      DEVOPS.navigation.hideAllBtns();
        
                                    }).fail(function() {
                                    alert( "error" );
                                  });
                                });
                              } 

                          } else {
                            var timeOut = setTimeout(function(){
                            pollInstanceStatus(instId);
                            },500);
                          }


                         }
                       });
                       }
                      pollInstanceStatus(instId);
                })(data.launchedInstances[j].instanceId);
              }
            });
       } 


       var $selLi = $('.sel-role-thumbnail'); 
       $('.sel-roles').click(function(e){
        var $this = $(this);
        
        // enabling background for current selected div
        $selLi.removeClass('sel-active');
        $this.parent().addClass('sel-active');
        
        // showing the recipies list for active role and hiding rest  
        var recipeListId = $this.attr('data-recipe-list-id');
        $('.instance-configuration-container').hide();
        $('#configContainer'+recipeListId).show({
          duration:100,
          complete:function() {
            $('.ui-multiselect').hide();

        //checking whether the plugin is already applied to this element
          if($this.data('isMultiSelectInitialized')) {
           console.log('id = '+recipeListId);
           var $multiselect = $('#multiselect-'+recipeListId);
           $multiselect.show();       
        } else {
          var $recipeList = $('#'+recipeListId);
          //$recipeList.show();
          $recipeList.multiselect();
          $this.data('isMultiSelectInitialized',true);
        }
          }
        });
      
        

        
      }).first().trigger('click');
     })();

    </script>


<%}%>