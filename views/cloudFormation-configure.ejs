<style type="text/css">
.configureTemplateArea{
	height: 80%;
    margin-left: 1.5%;
    margin-top: 2%;
    width: 97%;
    overflow-y: auto;
    overflow-x: hidden;
}
.stackResultArea {
	height: 100%;
	width: 100%;
	display: none;
}
.configureStackNavBtnCtn {
    margin-top: 25px;
    text-align: center;
}

.backTotemplateBtn {
    background: none repeat scroll 0 0 #428BCA;
    border: 0 none;
    border-radius: 5px;
    color: #FFFFFF !important;
    cursor: pointer;
    font-weight: bold;
    padding: 10px 5px;
    width: 100px;
    text-decoration: none !important; 
}
.createStackBtn {
   background: none repeat scroll 0 0 #428BCA;
   border: 0 none;
    border-radius: 5px;
    color: #FFFFFF !important;
    cursor: pointer;
    font-weight: bold;
    padding: 10px 5px;
    width: 100px;
    text-decoration: none !important; 
}
.form-control-error{
  border-color: #FF4D4D;
  outline: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 77, 77, 0.6) !important;
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 77, 77, 0.6) !important;
}

</style>
<div class="configurationContainerArea">
<div class="configureTemplateArea">
<div class="templateDescriptionArea">
 <div class="panel panel-default">
  <div class="panel-heading">Template Title</div>
  <div class="panel-body">
    <%=templateTitle%>
  </div>
 </div>
 <%if(templateObj.Description) {
 %>
<div class="panel panel-default">
  <div class="panel-heading">Description</div>
  <div class="panel-body">
   <%=templateObj.Description%>
  </div>
 </div>
<%}%>
</div>
<div class="templateParametersArea">
	 <form class="form-horizontal" role="form">
     <div class="form-group">
      <label for="stackNameInput" class="col-sm-2 control-label">Stack Name</label>
  		<div class="col-sm-10">
        <input type="text" class="form-control" id="stackNameInput" placeholder="Stack Name" />
       </div>  
     </div>

  <%if(templateObj.Parameters){
    var parametersKeys = Object.keys(templateObj.Parameters);
    for(var i=0;i<parametersKeys.length;i++) {
     var param = templateObj.Parameters[parametersKeys[i]];
     var defaultValue = param.Default;
     if(!defaultValue) {
      defaultValue = '';
     }
     var paramType = param.Type;
     var allowedValues = param.AllowedValues;

  %>
   <div class="form-group">
    <label for="param<%=i%>" class="col-sm-2 control-label"><%=parametersKeys[i]%></label>
    <div class="col-sm-10 dynamicParams" data-id="<%=i%>">
      <input type="hidden" value="<%=parametersKeys[i]%>" id="param<%=i%>_paramName" />
      <input type="hidden" value="<%=paramType%>" id="param<%=i%>_type" />
      <%if(!allowedValues) {%>
      <input type="text" class="form-control" id="param<%=i%>" placeholder="<%=defaultValue%>" value="<%=defaultValue%>">
     <%} else {%>
       <select id="param<%=i%>">
       	<% for(var j=0;j<allowedValues.length;j++) {
       	   var selected = '';
       	   if(allowedValues[j] == defaultValue) {
       	     selected = 'selected';   
       	   }%>
       	  <option value="<%=allowedValues[j]%>" <%=selected%>><%=allowedValues[j]%></option>
      

       	<%}%>
       </select>
     <%}%>
    </div>
  </div>

  <%}%>
  <%}%>
  </form>
</div>
</div>

<div class="configureStackNavBtnCtn">
<input type="button" value="Back" class="backTotemplateBtn " name="Back">
<input type="button" value="Create" class="createStackBtn" name="Create">
<a class="template_domain_settings" style="" href="#domainModal" data-target="#domainModal" data-toggle="modal" role="button" title="Domain"></a>
</div>
</div>
<div class="stackResultArea">


	</div>

<script type="text/javascript">
(function(){
 $('.backTotemplateBtn').click(function(e){
   $('.configureStackContainer').hide();
   $('.formation-cards-container').show();
 });
 
 $('.createStackBtn').click(function(e){
 	//validating parameters

    var reqBody = {};

 	var $stackNameInput = $('#stackNameInput');
    var stackName = $stackNameInput.val();
    if(!stackName) {
       $stackNameInput.addClass('form-control-error');
       return;
    } else {
    	$stackNameInput.removeClass('form-control-error');
    }
    reqBody.stackName = stackName;
    reqBody.templateUrl = '<%=templateUrl%>'; 
    
    var parameters = [];

    var $dynamicParams = $('.dynamicParams');
    for(var i=0;i< $dynamicParams.length;i++) {
    	var parameterObj = {};
       var paramId = $($dynamicParams.get(i)).attr('data-id');
       var $paramInput = $('#param'+paramId);
       if(!$paramInput.val()) {
           $paramInput.addClass('form-control-error');
            return;
       } else {
       	  $paramInput.removeClass('form-control-error');
       }
       
       var paramValue;
       var paramType = $('#param'+paramId+'_type').val();
       if(paramType === 'Number') {
          paramValue = parseFloat($paramInput.val());
          if(!paramValue) {
             $paramInput.addClass('form-control-error');
             return;
          } else {
       	     $paramInput.removeClass('form-control-error');
       	  }
  
       } else {
         paramValue = $paramInput.val();
       }

       parameterObj.ParameterKey = $('#param'+paramId+'_paramName').val();
       parameterObj.ParameterValue = paramValue;
       parameters.push(parameterObj);
    }
    console.log('parameters ==> ',parameters);
    if(parameters.length) {
    	reqBody.parameters = parameters;
    }

		$('.template_domain_settings').trigger('click');

		$('.save-domain-btn').unbind("click").click(function(evt) {
			 var domainName = $('#domainNameText').val()+'.relevancelab.com';
             var pid = $('.nav-prod').filter('.active').attr('data-pid'); 
             reqBody.domainName = domainName;
             reqBody.pid = pid;
            $('.configurationContainerArea').hide();
             $('.stackResultArea').empty().append('<img class="center-block" style="height:50px;width:50px;margin-top: 10%;margin-bottom: 10%;" src="img/loading.gif" />').show();
           $.post('/aws/cloudformation/createStack',reqBody,function(data){
           	  
               $('.stackResultArea').empty().append('stackId : '+data);
              
           }).error(function(){
           	alert('error in creating stack');
           });
        

		});

 	
 });

})();
</script>