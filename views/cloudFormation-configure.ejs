<style type="text/css">
.configurationContainerArea {
  height: 100%;
   padding-top: 23px;
}

.configureTemplateArea{
	height: 80%;
    margin-left: 1.5%;
    width: 97%;
    overflow-y: auto;
    overflow-x: hidden;
}

.stackResultArea {
	height: 100%;
	width: 100%;
	display: none;
  overflow: auto;
}
.configureStackNavBtnCtn {
    margin-top: 25px;
    text-align: center;
}

.backTotemplateBtn {
    background: none repeat scroll 0 0 #428BCA;
    border: 0 none;
    border-radius: 5px;
    color: #FFFFFF !important;
    cursor: pointer;
    font-weight: bold;
    padding: 10px 5px;
    width: 100px;
    text-decoration: none !important; 
}
.saveTotemplateBtn {
    background: none repeat scroll 0 0 #428BCA;
    border: 0 none;
    border-radius: 5px;
    color: #FFFFFF !important;
    cursor: pointer;
    font-weight: bold;
    padding: 10px 5px;
    width: 145px;
    text-decoration: none !important; 
}
.createStackBtn {
   background: none repeat scroll 0 0 #428BCA;
   border: 0 none;
    border-radius: 5px;
    color: #FFFFFF !important;
    cursor: pointer;
    font-weight: bold;
    padding: 10px 5px;
    width: 100px;
    text-decoration: none !important; 
}
.form-control-error{
  border-color: #FF4D4D;
  outline: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 77, 77, 0.6) !important;
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 77, 77, 0.6) !important;
}
.saveAsCloudForBpBtn{
  display: none;
}

.saveBluePrintInputControl {
  width:300px !important;
  display: inline-block !important;
}

</style>
<div class="configurationContainerArea">
<div class="configureTemplateArea">
<div class="templateDescriptionArea">
 <div class="panel panel-default">
  <div class="panel-heading">Template Title</div>
  <div class="panel-body">
    <%=templateTitle%>
  </div>
 </div>
 <%if(templateObj.Description) {
 %>
<div class="panel panel-default">
  <div class="panel-heading">Description</div>
  <div class="panel-body">
   <%=templateObj.Description%>
  </div>
 </div>
<%}%>
</div>
<div class="templateParametersArea">
	 <form class="form-horizontal" role="form">
     <div class="form-group">
      <label for="stackNameInput" class="col-sm-2 control-label">Stack Name</label>
  		<div class="col-sm-10">
        <input type="text" class="form-control" id="stackNameInput" placeholder="Stack Name" />
       </div>  
     </div>

  <%if(templateObj.Parameters){
    var parametersKeys = Object.keys(templateObj.Parameters);
    for(var i=0;i<parametersKeys.length;i++) {
     var param = templateObj.Parameters[parametersKeys[i]];
     var defaultValue = param.Default;
     if(!defaultValue) {
      defaultValue = '';
     }
     var paramType = param.Type;
     var allowedValues = param.AllowedValues;

  %>
   <div class="form-group">
    <label for="param<%=i%>" class="col-sm-2 control-label"><%=parametersKeys[i]%></label>
    <div class="col-sm-10 dynamicParams" data-id="<%=i%>">
      <input type="hidden" value="<%=parametersKeys[i]%>" id="param<%=i%>_paramName" />
      <input type="hidden" value="<%=paramType%>" id="param<%=i%>_type" />
      <%if(!allowedValues) {%>
      <input type="text" class="form-control" id="param<%=i%>" placeholder="<%=defaultValue%>" value="<%=defaultValue%>">
     <%} else {%>
       <select id="param<%=i%>">
       	<% for(var j=0;j<allowedValues.length;j++) {
       	   var selected = '';
       	   if(allowedValues[j] == defaultValue) {
       	     selected = 'selected';   
       	   }%>
       	  <option value="<%=allowedValues[j]%>" <%=selected%>><%=allowedValues[j]%></option>
      

       	<%}%>
       </select>
     <%}%>
    </div>
  </div>

  <%}%>
  <%}%>

 <%if(cookbooks && cookbooks.length) {%>
    <div class="form-group">
      <label for="templateCookbookslist" class="col-sm-2 control-label">Catalyst RunList</label>
      <div class="col-sm-10">
        <select class="form-control" id="templateCookbookList" multiple="multiple">
         <%for(var j=0;j<cookbooks.length;j++){%>
         <option data-id="<%=j%>" value='<%=cookbooks[j]%>'><%=cookbooks[j]%></option>
         <%}%>
        </select>
       </div>  
     </div>

 <%}%>
  </form>
</div>
</div>

<div class="configureStackNavBtnCtn">
<input type="button" value="Back" class="backTotemplateBtn " name="Back">
<input type="button" value="Save as Blueprint" class="saveTotemplateBtn " name="Save">
<a type="button" value="Save As Blueprint" href="#stackBlueprintSaveModal" class="saveAsCloudForBpBtn action-button" name="Launch" data-target="#stackBlueprintSaveModal" data-toggle="modal" role="button"></a>
<input type="button" value="Create" class="createStackBtn" name="Create">
<a class="template_domain_settings" style="" href="#domainModal" data-target="#domainModal" data-toggle="modal" role="button" title="Domain"></a>
</div>
</div>

<!-- Modal -->
<div class="modal fade" id="stackBlueprintSaveModal" tabindex="-1" role="dialog" aria-labelledby="blueprintTitle" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <!--<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>-->
        <h4 class="modal-title" id="stackBlueprintTitle">Blueprint Name</h4>
      </div>
      <div class="modal-body">
          <% var blueprintsListObj = {};
        if(domains && domains.length) { 
             for(var i=0;i<domains.length;i++) {
             if(domains[i].bluePrintsCloudFormation && domains[i].bluePrintsCloudFormation.length) {

                for(var j=0;j<domains[i].bluePrintsCloudFormation.length;j++) {
                  if(domains[i].bluePrintsCloudFormation[j].groupName === userData.ou) {
                      if(!(blueprintsListObj[domains[i].bluePrintsCloudFormation[j].blueprintName])) {
                          blueprintsListObj[domains[i].bluePrintsCloudFormation[j].blueprintName] = {};
                      }
                   }

                }
        }}} 
          blueprintsLists = Object.keys(blueprintsListObj);
        %>

          <form class="form-horizontal" role="form">
          
          <div class="form-group">
            <label for="stackBluePrintName" class="col-sm-4 control-label saveBluePrintInputlable">Blueprints :</label>
             <div class="col-sm-8">
              <select class="form-control saveBluePrintInputControl" id="stackBluePrintName">
                 <option>Choose Blueprint</option>
                 <% 
                    for(var i=0;i<blueprintsLists.length;i++) {
                  %>
                  <option value="<%=blueprintsLists[i]%>"><%=blueprintsLists[i]%></option>
                <%}%>
              </select>
             </div>
           </div>
           <div class="form-group">
            
            <label for="stackBluePrintNameText" class="col-sm-4 control-label saveBluePrintInputlable">Create New Blueprint :</label>
             <div class="col-sm-8">
               <input id="stackBluePrintNameText" type="text" disabled class="form-control saveBluePrintInputControl"/>&nbsp; <input type="checkbox" name="blueprintType" id="stackBlueprintType"/>
             </div>
           </div>


           <div class="form-group">
            <label for="stackBluePrintDomainName" class="col-sm-4 control-label saveBluePrintInputlable">Product Groups :</label>
             <div class="col-sm-8">
              <select class="form-control saveBluePrintInputControl" id="stackBluePrintDomainName">
                 <option>Choose Product Group</option>
                 <% 
                    if(domains && domains.length) {
                     for(var i=0;i<domains.length;i++){
                  %>
                   <option value="<%=domains[i].domainName%>"><%=domains[i].domainName%></option>
                <%}}%>
              </select>
             </div>
           </div>
           <div class="form-group">
            
            <label for="stackCreateDomainNameText" class="col-sm-4 control-label saveBluePrintInputlable">Create New Product Group :</label>
             <div class="col-sm-8">   
               <input id="stackCreateDomainNameText" type="text" disabled class="form-control saveBluePrintInputControl"/>&nbsp; <input type="checkbox" name="domainType" id="stackDomainType"/>
             </div>
           </div>

           <div class="form-group">
            <label for="cfExpirationDays" class="col-sm-4 control-label saveBluePrintInputlable">Stack Validity <br/>(In Days) :</label>
             <div class="col-sm-8">   
                <select class="form-control saveBluePrintInputControl" id="cfExpirationDays">
                   <% for(var i=0;i<365;i++){%>
                   <option value="<%=i%>"><%=i%></option>
                   <%}%>
                </select>
             </div>
           </div>
           <div class="form-group">
            
          <label for="cfServiceConsumersUsers" class="col-sm-4 control-label saveBluePrintInputlable">Users</label>
             <div class="col-sm-8">   
                <select class="form-control saveBluePrintInputControl" id="cfServiceConsumersUsers" multiple>
                   <% for(var i=0;i<serviceConsumers.length;i++){%>
                   <option value="<%=serviceConsumers[i].username%>"><%=serviceConsumers[i].username%></option>
                   <%}%>
                </select>
             </div>
           </div>



        </form>
            
      </div>
      <div class="modal-footer">
        <!--<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>-->
        <button type="button" class="btn btn-primary save-stack-blueprint-btn" data-dismiss="modal">Save</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="stackResultArea">


	</div>

<script type="text/javascript">
(
  function(){
 
$('#stackDomainType').change(function() {
        if($(this).is(":checked")) {
           $('#stackBluePrintDomainName').parent().parent().hide();
         
          $('#stackBluePrintDomainName').attr('disabled',true);
          $('#stackCreateDomainNameText').attr('disabled',false);
          
        } else {
          $('#stackBluePrintDomainName').parent().parent().show();
          $('#stackBluePrintDomainName').attr('disabled',false);
          $('#stackCreateDomainNameText').attr('disabled',true);
          
        }
  });

  $('#stackBlueprintType').change(function() {
        if($(this).is(":checked")) {
            $('#stackBluePrintName').parent().parent().hide();
          $('#stackBluePrintName').attr('disabled',true);
          $('#stackBluePrintNameText').attr('disabled',false);
          
        } else {
           $('#stackBluePrintName').parent().parent().show();
          $('#stackBluePrintName').attr('disabled',false);
          $('#stackBluePrintNameText').attr('disabled',true);
          
        }
  });


 $('.backTotemplateBtn').click(function(e){
   $('.configureStackContainer').hide();
   $('.formation-cards-container').show();
 });
 

function validateAndGetParametersInput() {
    var reqBody = {};

    var $stackNameInput = $('#stackNameInput');
    var stackName = $stackNameInput.val();
    if(!stackName) {
       $stackNameInput.addClass('form-control-error');
       return;
    } else {
      $stackNameInput.removeClass('form-control-error');
    }
    reqBody.stackName = stackName;
    reqBody.templateUrl = '<%=templateUrl%>'; 
    
    var parameters = [];

    var $dynamicParams = $('.dynamicParams');
    for(var i=0;i< $dynamicParams.length;i++) {
      var parameterObj = {};
       var paramId = $($dynamicParams.get(i)).attr('data-id');
       var $paramInput = $('#param'+paramId);
       if(!$paramInput.val()) {
           $paramInput.addClass('form-control-error');
            return;
       } else {
          $paramInput.removeClass('form-control-error');
       }
       
       var paramValue;
       var paramType = $('#param'+paramId+'_type').val();
       if(paramType === 'Number') {
          paramValue = parseFloat($paramInput.val());
          if(!paramValue) {
             $paramInput.addClass('form-control-error');
             return;
          } else {
             $paramInput.removeClass('form-control-error');
          }
  
       } else {
         paramValue = $paramInput.val();
       }

       parameterObj.ParameterKey = $('#param'+paramId+'_paramName').val();
       parameterObj.ParameterValue = paramValue;
       parameters.push(parameterObj);
    }
   
    if(parameters.length) {
      reqBody.parameters = parameters;
    }
    reqBody.runlist = $('#templateCookbookList').val();


    return reqBody;

}



 $('.saveTotemplateBtn').click(function(e){
    var reqBody = validateAndGetParametersInput();

    if(reqBody) {
      $('.saveAsCloudForBpBtn').trigger('click');
    }
 });

 $('.save-stack-blueprint-btn').click(function(e){
  var reqBody = validateAndGetParametersInput();
    if(reqBody) {
      var blueprintName;
     if(!$('#stackBlueprintType').is(":checked")) {
       blueprintName =  $("#stackBluePrintName").val();
     } else {
       blueprintName =  $('#stackBluePrintNameText').val();
     }
     reqBody.blueprintName = blueprintName;

     var domainName;
     if(!$('#stackDomainType').is(":checked")) {
       domainName =  $("#stackBluePrintDomainName").val();
     } else {
       domainName =  $('#stackCreateDomainNameText').val() + '';
     }
     reqBody.domainName = domainName;
     reqBody.pid = $('.nav-prod').filter('.active').attr('data-pid'); 
     reqBody.templateTitle = '<%=templateTitle%>';
     reqBody.expirationDays = $('#cfExpirationDays').val();
     reqBody.serviceConsumers = $('#cfServiceConsumersUsers').val();
     $.post('/aws/cloudformation/saveBluePrint',reqBody,function(data){
       console.log('posted');
       $('#stackBlueprintSaveModal').modal('hide')
     });
     return false;

    }
 });


 $('.createStackBtn').click(function(e){
 	//validating parameters
  var reqBody = validateAndGetParametersInput();
  if(!reqBody) {
     return;
  }
   

		$('.template_domain_settings').trigger('click');

		$('.save-domain-btn').unbind("click").click(function(evt) {
			 var domainName = $('#domainNameText').val()+'';
             var pid = $('.nav-prod').filter('.active').attr('data-pid'); 
             reqBody.domainName = domainName;
             reqBody.pid = pid;
             reqBody.templateTitle = '<%=templateTitle%>';
            $('.configurationContainerArea').hide();
             $('.stackResultArea').empty().append('<img class="center-block" style="height:50px;width:50px;margin-top: 10%;margin-bottom: 10%;" src="img/loading.gif" />').show();
           $.post('/aws/cloudformation/createStack',reqBody,function(data){
           	   
                var $message = $('<div class="instance-result"><div class="alert alert-success fade in instanceSuccess" id="stackMessage" style="margin: 10px 25px;"><strong>Congratulations!</strong>&nbsp;Stack Created Successfully.<br/><strong>Stack Id : </strong><span>'+data+'</span></div></div>'); 


               $('.stackResultArea').empty().append($message);
              
           }).error(function(){
            var $message = $('<div class="instance-result"><div class="alert alert-danger fade in instanceSuccess" id="stackMessage" style="margin: 10px 25px"><strong>Error!</strong>&nbsp;Unable to create stack.</div></div>');  
            $('.stackResultArea').empty().append($message);
           	//alert('error in creating stack');
           });
        

		});

 	
 });

})();
</script>