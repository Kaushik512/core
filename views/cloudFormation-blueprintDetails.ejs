<%

function getCFCardHeadingHtml(role) {
  switch(role) {
      case 'LAMP':
      return '<span class="domain-roles-icon"><img src="img/cf-icons/lamp.png" style="height: 30px;"/></span><span>LAMP</span>';
      case 'MySql':
       return '<span class="domain-roles-icon"><img src="img/cf-icons/mysql.png" style="height: 30px;"/></span><span>Mysql</span>';
      case 'Joomla':
       return '<span class="domain-roles-icon"><img src="img/cf-icons/joomla.png" style="height: 30px;"/></span><span>Joomla</span>';
      case 'Drupal':
       return '<span class="domain-roles-icon"><img src="img/cf-icons/drupal.png" style="height: 30px;"/></span><span>Drupal</span>';
      case 'Ruby On Rails':
       return '<span class="domain-roles-icon"><img src="img/cf-icons/rubyonrails.png" style="height: 30px;"/></span><span>Ruby On Rails</span>';
      case 'Insoshi':
       return '<span class="domain-roles-icon"><img src="img/cf-icons/insoshi.png" style="height: 30px;"/></span><span>Insoshi</span>';
      case 'Redmine':
       return '<span class="domain-roles-icon"><img src="img/cf-icons/redmine.png" style="height: 30px;"/></span><span>Redmine</span>';
      case 'Custom App':
       return '<span class="domain-roles-icon"><img src="img/app-store-icons/customApp.png" style="height: 25px;"/></span><span>Custom App</span>';

      default: 
       return '<span class="domain-roles-icon"><img src="img/galleryIcons/2.png" style="height: 25px;"/></span><span>'+role+'</span>';

     }
}

%>

<style>
.cfBluePrintDetailsContainer {

}
.cfDetailsArea {
  
}
.cfDetailValue {
  border: 0 !important;
 
  box-shadow: none !important;
}
.cfBlueprintDetailsbody {
   max-height: 310px;
    overflow-x: hidden;
    overflow-y: auto;
}

.cfEditInput {
  display: none;
  
}
.control-height{
  height: auto !important;
}
.cfCancelEditBlueprintBtn,.cfSaveEditedbluePrintBtn {
  display: none;
}
.cloudFormationBlueprintLaunchResultArea {
  display: none;
}

</style>
<div class="row">
  <div class="col-sm-3">
     
     <div class="cf-blueprint">
            <div class="cf-blueprint-caption">
              <div class="cf-blueprint-heading" title="<%=blueprint.templateName%>"><%- getCFCardHeadingHtml(blueprint.templateName)%></div>
              <div class="cf-blueprint-detail-list">
              <span class="cf-blueprint-detail-item"> Name : <strong><%=blueprint.blueprintName%></strong> </span>
             
              <span class="cf-blueprint-detail-item"> ver : <span class=""><%=blueprint.version%></span> </span>
              
              </div>
              <div style="font-size: 10px;">
                 <%if(userData.permissions.execute) {%>
                <a data-pid="<%=pid%>" data-domainName="<%=domainName%>" data-blueprintName="<%=blueprint.blueprintName%>" data-blueprintVersion="<%=blueprint.version%>" class="cfModalbluePrintLaunchBtn"  href="javascript:void(0)">Launch</a>  
                <%}%>
                 <%if(userData.permissions.write) {%>
                <a class="cfModalbluePrintEditBtn" href="javascript:void(0)">Edit</a>
                <a class="cfSaveEditedbluePrintBtn" href="javascript:void(0)">Save</a>
                <a class="cfCancelEditBlueprintBtn" href="javascript:void(0)">Cancel</a>
                 <%}%>
              </div>
          
            </div>
     </div>

  </div>
  <div class="col-sm-9">
<div class="panel panel-default cfBluePrintDetailsContainer">
  <div class="panel-heading">Configurations :  &nbsp; </div>
  <div class="panel-body cfBlueprintDetailsbody">
   
   <div class="">


<form class="form-horizontal cfDetailsArea" role="form">
      
     <div class="form-group">
      <label for="" class="col-sm-5 control-label">Stack Name</label>
  		<div class="col-sm-7">
        <span  class="form-control cfDetailValue" ><%=blueprint.stackName%></span>
        <input type="text" class="form-control cfEditInput" id="cfEditStackNameInput" value="<%=blueprint.stackName%>"/>
       </div>  
     </div>
     
     
      <%if(blueprint.stackParameters && blueprint.stackParameters.length) {
        for(i=0;i<blueprint.stackParameters.length;i++){
      %>
       <div class="form-group">
       <label for="stackNameInput" class="col-sm-5 control-label"><%=blueprint.stackParameters[i].ParameterKey%></label>
        <div class="col-sm-7">
         <span type="text" class="form-control cfDetailValue" ><%=blueprint.stackParameters[i].ParameterValue%></span>
         <%  
           var param = templateObj.Parameters[blueprint.stackParameters[i].ParameterKey];
           var allowedValues = param.AllowedValues;
           if(allowedValues) {
         %> <select class="form-control cfEditInput stackParameters" data-parameterKey="<%=blueprint.stackParameters[i].ParameterKey%>"> 
           <% for(var j=0;j<allowedValues.length;j++) { 
              var selected ='';
              if(blueprint.stackParameters[i].ParameterValue == allowedValues[j]) {
                 selected = 'selected';
              }
           %>
           <option value="<%=allowedValues[j]%>" <%=selected%>><%=allowedValues[j]%></option>
           <%}%>
          </select>
          <%} else { %>  
            <input type="text" class="form-control cfEditInput stackParameters" data-parameterKey="<%=blueprint.stackParameters[i].ParameterKey%>" value="<%=blueprint.stackParameters[i].ParameterValue%>"/>   
          <%}%>
       </div>  
     </div>
     

      <%}}%>

    <div class="form-group">
      <label for="stackNameInput" class="col-sm-5 control-label">Stack Validity</label>
      <div class="col-sm-7">
        <span type="text" class="form-control cfDetailValue" ><%=blueprint.expirationDays%> Days</span>
         <select class="form-control cfEditInput" id="cfEditStackExpirationDaysInput" name="">
                   <% for(var i=0;i<365;i++){
                   var selected ='';
                   if(i==blueprint.expirationDays) {
                    selected = 'selected'
                   }%>
                   <option value="<%=i%>" <%=selected%>><%=i%></option>
                   <%}%>
        </select>
       </div>  
     </div>

    <div class="form-group">
      <label for="stackNameInput" class="col-sm-5 control-label">Catalyst Runlist</label>
      <div class="col-sm-7">
        <ul class="form-control cfDetailValue control-height">
         <%
          if(blueprint.runlist && blueprint.runlist.length) {
         for(var i=0;i<blueprint.runlist.length;i++) {
         %>
         <li style="list-style: none outside none"><%=blueprint.runlist[i]%></li>
         <%}}%>
       </ul>
       
       <select class="form-control cfEditInput" id="cfEditStackRunlistInput" name="runlist" multiple>
                   <%
                    if(!(blueprint.runlist && blueprint.runlist.length)) {
                      blueprint.runlist = []; 
                    }   
                   for(var i=1;i<cookbooks.length;i++){ 
                      var selected = '';
                      if(blueprint.runlist.indexOf(cookbooks[i]) !== -1) {
                          selected = 'selected';
                      }
                   %>
                   <option value="<%=cookbooks[i]%>" <%=selected%>><%=cookbooks[i]%></option>
                   <%}%>
        </select>  


       </div>  
     </div>

      <div class="form-group">
      <label for="stackNameInput" class="col-sm-5 control-label">Service Consumers</label>
      <div class="col-sm-7">
        <ul class="form-control cfDetailValue control-height">
         <%
          if(blueprint.serviceConsumers && blueprint.serviceConsumers.length) {
         for(var i=0;i<blueprint.serviceConsumers.length;i++) {
          if(userData.cn !== blueprint.serviceConsumers[i]) { 
         %>
         <li style="list-style: none outside none"><%=blueprint.serviceConsumers[i]%></li>
         <%}}}%>
       </ul>
       
       <select class="form-control cfEditInput" id="cfEditStackConsumersInput" name="serviceConsumers" multiple>
                   <%
                    if(!(blueprint.serviceConsumers && blueprint.serviceConsumers.length)) {
                      blueprint.serviceConsumers = []; 
                    }   
                   for(var i=1;i<serviceConsumers.length;i++){ 
                      var selected = '';
                      if(blueprint.serviceConsumers.indexOf(serviceConsumers[i].username) !== -1) {
                          selected = 'selected';
                      }
                       if(userData.cn !== serviceConsumers[i].username) { 
                   %>
                   <option value="<%=serviceConsumers[i].username%>" <%=selected%>><%=serviceConsumers[i].username%></option>
                   <%}}%>
        </select>  


       </div>  
     </div>


</form>
</div>



</div>

</div>

<div class="cloudFormationBlueprintLaunchResultArea"></div>

</div>



</div>
</div>
<script type="text/javascript">
(function(){


$('.cfModalbluePrintEditBtn').unbind("click").click(function(e){
  $('.cloudFormationBlueprintLaunchResultArea').hide();
   $('.cfBluePrintDetailsContainer').show();

  $('.cfDetailValue').hide();
  $('.cfEditInput').show();
  $('.cfModalbluePrintLaunchBtn').hide();
  $('.cfCancelEditBlueprintBtn').show();
  $('.cfSaveEditedbluePrintBtn').show();
  $(this).hide();
});

$('.cfCancelEditBlueprintBtn').unbind("click").click(function(){
  
  

   $('.cfDetailValue').show();
  $('.cfEditInput').hide();
  $('.cfModalbluePrintLaunchBtn').show();
  $('.cfCancelEditBlueprintBtn').hide();
  $('.cfSaveEditedbluePrintBtn').hide();
  $('.cfModalbluePrintEditBtn').show();
})

$('.cfModalbluePrintLaunchBtn').unbind("click").click(function(e){

     $('.cfBluePrintDetailsContainer').hide();
     
      var $appStoreLaunchResultArea = $('.cloudFormationBlueprintLaunchResultArea').empty().append('<img class="center-block" style="height:50px;width:50px;margin-top: 10%;margin-bottom: 10%;" src="img/loading.gif" />').show();
       $.post('/aws/cloudformation/blueprints/launch',{
        pid:'<%=pid%>',
        domainName:'<%=domainName%>',
        blueprintName:'<%=blueprint.blueprintName%>',
        version:'<%=blueprint.version%>',
        
      },function(data){
        var $message = $('<div class="instance-result"><div class="alert alert-success fade in instanceSuccess" id="stackMessage" style="margin: 10px 25px;"><strong>Congratulations!</strong>&nbsp;Stack Created Successfully.<br/><strong>Stack Id : </strong><span>'+data+'</span></div></div>'); 

        $appStoreLaunchResultArea.empty().append($message);
      }).error(function(){
         var $message = $('<div class="instance-result"><div class="alert alert-danger fade in instanceSuccess" id="stackMessage" style="margin: 10px 25px"><strong>Error!</strong>&nbsp;Unable to create stack.</div></div>');  
         $appStoreLaunchResultArea.empty().append($message);
      });    
});

$('.cfSaveEditedbluePrintBtn').unbind("click").click(function(e){
   var reqBody = {};
   reqBody.stackName = $('#cfEditStackNameInput').val();
   reqBody.expirationDays = $('#cfEditStackExpirationDaysInput').val();
   reqBody.runlist = $('#cfEditStackRunlistInput').val();
   reqBody.serviceConsumers = $('#cfEditStackConsumersInput').val();
   reqBody.pid = '<%=pid%>';
   reqBody.domainName = '<%=domainName%>';
   reqBody.blueprintName = '<%=blueprint.blueprintName%>';
   reqBody.templateTitle = '<%=blueprint.templateName%>';
   reqBody.templateUrl = '<%=blueprint.templateUrl%>';
 
   var $stackParameters = $('.stackParameters');
   var parameters = [];
   $stackParameters.each(function(i,elem){
       var param = {};
       $elem = $(elem);
       param.ParameterKey = $elem.attr('data-parameterKey'); 
       param.ParameterValue = $elem.val(); 
       parameters.push(param); 
   }); 

   if(parameters.length) {
    reqBody.parameters = parameters;
   }
   console.log(reqBody);
   $.post('/aws/cloudformation/saveBluePrint',reqBody,function(data){
       console.log(data);
        var $blueprintDiv = $('#cf'+reqBody.domainName).find('#'+reqBody.blueprintName);
        console.log($blueprintDiv.length);
       var $blueprintVersionList = $blueprintDiv.find('select');
       console.log($blueprintVersionList.length); 
      
      var $newblueprintOptionTag = $('<option value="'+data+'">'+data+'</option>');
      $blueprintVersionList.append($newblueprintOptionTag);
      $newblueprintOptionTag.attr('selected',true);
      $blueprintDiv.find('.cFbluePrintDetailsBtn').trigger('click'); 

   }).error(function(e){
    
      alert("Unable to update blueprint");
   });  

});

$('.cfEditBtnContainer').show();

})();
</script>